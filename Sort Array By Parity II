class Solution {
    public void search(int[] nums, int i, int j){
       
        if(nums[i]%2==0 && i%2==1){
            while(j<nums.length){
                if(nums[j]%2==1 && j%2==0)
                {
                    swap(nums,i,j);
                    return;
                }
                else
                    j++;
            }
        }
        else {
            while(j<nums.length){
                if(nums[j]%2==0 && j%2==1){
                    swap(nums,i,j);
                    return;
                }
                else
                    j++;
            }
        }
    }
    public void swap(int[] nums, int i,int j){
         if(j==nums.length)
            return;
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    public int[] sortArrayByParityII(int[] nums) {
        Arrays.sort(nums);
        int i=0;
        while(i<nums.length){
            if(nums[i]%2==0 && i%2==0 || nums[i]%2==1 && i%2==1)
                i++;
            else{
                search(nums,i,i+1);
                i++;
            }
        }
        System.out.println(Arrays.toString(nums));
        return nums;
    }
}
